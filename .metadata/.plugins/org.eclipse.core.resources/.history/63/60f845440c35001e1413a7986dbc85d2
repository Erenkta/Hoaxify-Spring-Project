package com.hoaxify.ws.user;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Base64;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.hoaxify.ws.error.NotFoundException;
import com.hoaxify.ws.user.vm.UserUpdateVM;

@Service
public class UserService {
	
	UserRepository userRepository;
	
	PasswordEncoder passwordEncoder;
	
	public UserService(UserRepository userRepository, PasswordEncoder passwordEncoder) {
		this.userRepository = userRepository;
		this.passwordEncoder = passwordEncoder;
	}

	public void save(User user) {
		user.setPassword(this.passwordEncoder.encode(user.getPassword()));
		userRepository.save(user);
	}
	public Page<User> getUsers(Pageable page,User user){	//Pagination işlemi yapıldı
		if(user != null) {
			return userRepository.findByUsernameNot(user.getUsername(), page);
		}
		return userRepository.findAll(page); 
	}
	
	public User getByUsername(String username) {
		User userInDB = userRepository.findByUsername(username);
		if(userInDB == null) {
			throw new NotFoundException();
		}
		return userInDB;
	}

	public User updateUser(String username, UserUpdateVM updatedUser) throws Exception {
		User userInDB = userRepository.findByUsername(username);
		if(updatedUser.getImage() != null) {
			//userInDB.setImage(updatedUser.getImage());
			String storedFileName = writeBase64ToFile(updatedUser.getImage());
			userInDB.setImage(storedFileName);
		}
		userInDB.setDisplayName(updatedUser.getDisplayName());
		return userRepository.save(userInDB); //üstüne yazdı
		
	}

	public String writeBase64ToFile(String image) throws Exception {
		String fileName = "profile.png";
		File target = new File("picture-storage/"+fileName);
		OutputStream outputStream = new FileOutputStream(target);
		
		byte[] base64Encoded = Base64.getDecoder().decode(image);
		outputStream.write(base64Encoded);
		outputStream.close();
		return fileName;
	}

}
