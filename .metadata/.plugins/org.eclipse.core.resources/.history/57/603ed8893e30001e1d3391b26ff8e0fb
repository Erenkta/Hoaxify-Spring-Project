package com.hoaxify.ws.user;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.annotation.JsonView;
import com.hoaxify.ws.shared.GenericResponse;
import com.hoaxify.ws.shared.Views;

@RestController
public class UserController {
	
	@Autowired
	UserService userService;
	
	@PostMapping("/api/1.0/users")
	public GenericResponse createUser(@Valid @RequestBody User user) { //Request'ten body isterken RequestBody 
		userService.save(user);
		return new GenericResponse("user created");
	}
	@GetMapping("/api/1.0/users")
	//@JsonView(Views.Base.class) Projection yapacağımdan dolayı comment out ettim
	public Page<UserProjection> getUsers( Pageable page   /*1*/)  { //URL'den parametre isterken RequestParam
		return userService.getUsers(page);
		
	}
	//@RequestParam int currentPage,@RequestParam(required = false, defaultValue = "3") int pageSize (1) de bunu yapmak yerine Pageable kullanıcaz Springe bırakıcaz işi
}
